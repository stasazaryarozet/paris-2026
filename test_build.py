#!/usr/bin/env python3
"""
–¢–µ—Å—Ç—ã –¥–ª—è build.py ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ content.js
–ó–∞–ø—É—Å–∫: python3 test_build.py
"""

import subprocess
import json
import re
from pathlib import Path

def test_build():
    """–ü–æ–ª–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è build.py"""
    
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï BUILD.PY\n")
    errors = []
    
    # 1. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è
    print("1. –ó–∞–ø—É—Å–∫ build.py...")
    result = subprocess.run(['python3', 'build.py'], capture_output=True, text=True)
    if result.returncode != 0:
        errors.append(f"‚ùå build.py –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π: {result.stderr}")
        return errors
    print("   ‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    
    # 2. –°–∏–Ω—Ç–∞–∫—Å–∏—Å JS
    print("2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ JavaScript...")
    result = subprocess.run(['node', '--check', 'content.js'], capture_output=True, text=True)
    if result.returncode != 0:
        # Fallback: –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ñ–∞–π–ª –ø–æ–¥ Node
        fallback = subprocess.run(['node', '-e', 'require("./content.js");'], capture_output=True, text=True)
        if fallback.returncode != 0:
            errors.append(f"‚ùå –°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ content.js: {result.stderr or fallback.stderr}")
            return errors
    print("   ‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å –≤–∞–ª–∏–¥–µ–Ω")
    
    # 3. –ß—Ç–µ–Ω–∏–µ content.js
    print("3. –ü–∞—Ä—Å–∏–Ω–≥ content.js...")
    content_js = Path('content.js').read_text(encoding='utf-8')
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ JSON –≤–º–µ—Å—Ç–æ JS
    if '"hero":' in content_js or '"meta":' in content_js:
        errors.append("‚ùå –ö–†–ò–¢–ò–ß–ù–û: –ö–ª—é—á–∏ –≤ –∫–∞–≤—ã—á–∫–∞—Ö (JSON –≤–º–µ—Å—Ç–æ JS)")
    else:
        print("   ‚úÖ –ß–∏—Å—Ç—ã–π JS —Å–∏–Ω—Ç–∞–∫—Å–∏—Å (–±–µ–∑ –∫–∞–≤—ã—á–µ–∫ —É –∫–ª—é—á–µ–π)")
    
    # 4. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ CONTENT
    print("4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    required_keys = ['hero', 'meta', 'program', 'days', 'curators', 'inclusions']
    for key in required_keys:
        if f'{key}:' not in content_js:
            errors.append(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å–µ–∫—Ü–∏—è: {key}")
        else:
            print(f"   ‚úÖ {key} —Å–µ–∫—Ü–∏—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    
    # 5. Hero
    print("5. –ü—Ä–æ–≤–µ—Ä–∫–∞ hero —Å–µ–∫—Ü–∏–∏...")
    hero_fields = ['title:', 'subtitle:', 'dates:', 'group:', 'price:']
    for field in hero_fields:
        if field not in content_js[:500]:  # Hero –≤ –Ω–∞—á–∞–ª–µ
            errors.append(f"‚ùå Hero: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç {field}")
        else:
            print(f"   ‚úÖ Hero.{field.strip(':')} –µ—Å—Ç—å")
    
    # 6. –î–Ω–∏
    print("6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–Ω–µ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã...")
    days_count = content_js.count('number: "–î–ï–ù–¨')
    if days_count < 4:
        errors.append(f"‚ùå –ù–∞–π–¥–µ–Ω–æ —Ç–æ–ª—å–∫–æ {days_count} –¥–Ω–µ–π (–æ–∂–∏–¥–∞–µ—Ç—Å—è 4)")
    else:
        print(f"   ‚úÖ {days_count} –¥–Ω–µ–π –Ω–∞–π–¥–µ–Ω–æ")
    
    for day in ['–î–ï–ù–¨ I', '–î–ï–ù–¨ II', '–î–ï–ù–¨ III', '–î–ï–ù–¨ IV']:
        if day not in content_js:
            errors.append(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: {day}")
    
    # 7. –ö—É—Ä–∞—Ç–æ—Ä—ã (–ö–†–ò–¢–ò–ß–ù–û!)
    print("7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É—Ä–∞—Ç–æ—Ä–æ–≤...")
    curators = ['–†–æ–∑–µ—Ç', '–õ–æ–≥–∏–Ω–æ–≤–∞']
    for curator in curators:
        if curator not in content_js:
            errors.append(f"‚ùå –ö–†–ò–¢–ò–ß–ù–û: –ö—É—Ä–∞—Ç–æ—Ä {curator} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!")
        else:
            print(f"   ‚úÖ {curator} –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    
    # 8. Inclusions
    print("8. –ü—Ä–æ–≤–µ—Ä–∫–∞ inclusions...")
    inclusions_count = content_js.count('icon:')
    if inclusions_count < 3:
        errors.append(f"‚ùå –ù–∞–π–¥–µ–Ω–æ —Ç–æ–ª—å–∫–æ {inclusions_count} inclusions (–æ–∂–∏–¥–∞–µ—Ç—Å—è 3+)")
    else:
        print(f"   ‚úÖ {inclusions_count} inclusions –Ω–∞–π–¥–µ–Ω–æ")
    
    # 9. –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    print("9. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞...")
    critical_content = [
        '100&nbsp;–ª–µ—Ç',  # –° —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–æ–π
        '15‚Äì18+ —è–Ω–≤–∞—Ä—è 2026',
        '1 550&nbsp;‚Ç¨',  # –¢–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∞ –º–µ–∂–¥—É —á–∏—Å–ª–æ–º –∏ –µ–¥–∏–Ω–∏—Ü–µ–π
        'Palais de Tokyo',
        'Maison Louis Carr√©',
        'Eileen Gray'
    ]
    for item in critical_content:
        if item not in content_js:
            errors.append(f"‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤–∞–∂–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç: {item}")
    
    print(f"   ‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã")
    
    # 10. –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
    print("10. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ content.js...")
    file_size = len(content_js)
    if file_size < 4000:
        errors.append(f"‚ùå content.js —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π ({file_size} –±–∞–π—Ç, –æ–∂–∏–¥–∞–µ—Ç—Å—è >4000)")
    else:
        print(f"   ‚úÖ –†–∞–∑–º–µ—Ä: {file_size} –±–∞–π—Ç")
    
    # –ò—Ç–æ–≥
    print("\n" + "="*60)
    if errors:
        print("‚ùå –¢–ï–°–¢–´ –ü–†–û–í–ê–õ–ï–ù–´\n")
        for error in errors:
            print(error)
        return False
    else:
        print("‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´")
        print("   content.js –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é")
        return True

if __name__ == '__main__':
    success = test_build()
    exit(0 if success else 1)

